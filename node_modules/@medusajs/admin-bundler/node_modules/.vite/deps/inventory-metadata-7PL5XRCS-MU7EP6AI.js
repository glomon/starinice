import "./chunk-EGRHWZRV.js";
import {
  MetadataForm
} from "./chunk-PVYA5KVC.js";
import "./chunk-EGRHWZRV.js";
import "./chunk-H3QLNIQZ.js";
import {
  RouteDrawer
} from "./chunk-LJDFKMOG.js";
import "./chunk-YY5JNEZV.js";
import "./chunk-OHTJOGDW.js";
import "./chunk-UESAM5J2.js";
import "./chunk-FURIVWWB.js";
import "./chunk-24AYSH5Z.js";
import "./chunk-Y7E3AKSU.js";
import "./chunk-P42N2CVA.js";
import "./chunk-JQ6JHQYV.js";
import "./chunk-2NKA7EPO.js";
import "./chunk-H5XEUC57.js";
import "./chunk-CD3UWPTR.js";
import "./chunk-JC3AABXJ.js";
import "./chunk-UVYZXJCZ.js";
import "./chunk-AJKOBEGU.js";
import "./chunk-EFTJBWZH.js";
import "./chunk-KKXPEDCK.js";
import "./chunk-QRVRA7WJ.js";
import "./chunk-F6XLLSP3.js";
import "./chunk-QREZ47SH.js";
import "./chunk-AFW6PFDV.js";
import "./chunk-2HIWKKOO.js";
import "./chunk-BI7OZFOQ.js";
import "./chunk-3CFLC4RY.js";
import "./chunk-TQNGNEVG.js";
import "./chunk-MKMSK5SE.js";
import "./chunk-MIXJTXLN.js";
import "./chunk-KJANOWRW.js";
import "./chunk-KNHEOVL3.js";
import "./chunk-LCW5JCSY.js";
import "./chunk-2R2KQPMU.js";
import {
  useInventoryItem,
  useUpdateInventoryItem
} from "./chunk-VPS36GDL.js";
import "./chunk-KZEAZRGV.js";
import "./chunk-S7K3MYSB.js";
import "./chunk-IW7FFK4D.js";
import "./chunk-FSQ44SVG.js";
import "./chunk-WPKD3INM.js";
import {
  useParams
} from "./chunk-2WRJVAK6.js";
import "./chunk-CVCKA5P5.js";
import "./chunk-NOBDUI2K.js";
import "./chunk-VARPEBF3.js";
import "./chunk-FZZ47AFW.js";
import {
  require_jsx_runtime
} from "./chunk-JURSM5AU.js";
import "./chunk-ZP5CUZDC.js";
import "./chunk-HSPO6A2T.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// node_modules/@medusajs/dashboard/dist/inventory-metadata-7PL5XRCS.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var InventoryItemMetadata = () => {
  const { id } = useParams();
  const { inventory_item, isPending, isError, error } = useInventoryItem(id);
  const { mutateAsync, isPending: isMutating } = useUpdateInventoryItem(id);
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime.jsx)(RouteDrawer, { children: (0, import_jsx_runtime.jsx)(
    MetadataForm,
    {
      isPending,
      isMutating,
      hook: mutateAsync,
      metadata: inventory_item == null ? void 0 : inventory_item.metadata
    }
  ) });
};
export {
  InventoryItemMetadata as Component
};
//# sourceMappingURL=inventory-metadata-7PL5XRCS-MU7EP6AI.js.map
